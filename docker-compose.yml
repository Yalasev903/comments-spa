version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: comments-spa-app
    container_name: comments-spa-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php.ini:/usr/local/etc/php/php.ini
      - ./docker/wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: comments_spa
      DB_USERNAME: root
      DB_PASSWORD: root
      REDIS_HOST: redis
    command: >
      sh -c "
        cp .env.example .env || true &&
        wait-for-it.sh db 3306 &&
        composer install &&
        php artisan migrate &&
        php artisan storage:link || true &&
        php artisan key:generate &&
        php artisan config:cache &&
        php artisan serve --host=0.0.0.0 --port=8080
      "

  queue:
    image: comments-spa-app
    container_name: comments-spa-queue
    restart: unless-stopped
    working_dir: /var/www
    depends_on:
      - app
    volumes:
      - ./:/var/www
      - ./docker/wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    command: >
      sh -c "
        wait-for-it.sh db 3306 &&
        wait-for-it.sh app 8080 &&
        sleep 5 &&
        php artisan queue:work --tries=3 --timeout=60
      "

  echo:
    build:
      context: .
      dockerfile: docker/echo.Dockerfile
    container_name: comments-spa-echo
    ports:
      - "6001:6001"
    volumes:
      - ./:/var/www
    depends_on:
      - app
      - redis

  vite:
    image: node:20
    container_name: comments-spa-vite
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev"
    depends_on:
      - app

  redis:
    image: redis:alpine
    container_name: comments-spa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  db:
    image: mysql:8.0
    container_name: comments-spa-db
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: comments_spa
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:
  redis_data:
